// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Streamberry.Data;

#nullable disable

namespace Streamberry.Migrations
{
    [DbContext(typeof(StreamberryDbContexto))]
    partial class StreamberryDbContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Streamberry.Models.ClassificacaoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("Id");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Comentario");

                    b.Property<int>("Nota")
                        .HasColumnType("int")
                        .HasColumnName("Nota");

                    b.HasKey("Id");

                    b.ToTable("Classificacao");
                });

            modelBuilder.Entity("Streamberry.Models.FilmeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<Guid>("IdGenero")
                        .HasColumnType("char(36)")
                        .HasColumnName("IdGenero");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("IdGenero");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Streamberry.Models.GeneroModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Streamberry.Models.StreamingFilmeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Filme")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Streaming")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("StreaminfFilme");
                });

            modelBuilder.Entity("Streamberry.Models.StreamingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FilmeModelId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("FilmeModelId");

                    b.ToTable("Streaming");
                });

            modelBuilder.Entity("Streamberry.Models.UsuarioModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Streamberry.Models.FilmeModel", b =>
                {
                    b.HasOne("Streamberry.Models.GeneroModel", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Streamberry.Models.StreamingModel", b =>
                {
                    b.HasOne("Streamberry.Models.FilmeModel", null)
                        .WithMany("Streamings")
                        .HasForeignKey("FilmeModelId");
                });

            modelBuilder.Entity("Streamberry.Models.FilmeModel", b =>
                {
                    b.Navigation("Streamings");
                });
#pragma warning restore 612, 618
        }
    }
}
